# k8s/02-configs/app-configmap.yaml
# ConfigMap 用于存储非机密的配置数据，例如环境变量、配置文件等。
# 将配置与应用镜像分离，使得应用更具可移植性，配置更易于管理。
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: jaeger-demo
data:
  # JAEGER_ENDPOINT: Jaeger trace 收集器的地址。
  # "jaeger" 是 Jaeger Service 的名称。
  # "jaeger-demo" 是命名空间。
  # 在同一个命名空间下的服务可以直接使用服务名 "jaeger:14268" 进行通信。
  # 写成 "jaeger.jaeger-demo:14268" 是更明确的 FQDN (完全限定域名) 格式。
  JAEGER_ENDPOINT: "http://jaeger.infra:14268/api/traces"

  # KAFKA_BROKERS: Kafka 集群的地址。
  # "kafka-service" 是我们在 kafka-zookeeper.yaml 中定义的 Kafka Service 的名称。
  KAFKA_BROKERS: "kafka-service.infra:9092"

  # 以下是各个微服务的访问地址。
  # 在 Kubernetes 集群内部，服务之间可以通过 "http://<service-name>:<port>" 的格式直接通信。
  # 例如，api-gateway 可以通过 "http://order-service:8081" 访问 order-service。
  ORDER_SERVICE_BASE_URL: "http://order-service:8081"
  FRAUD_DETECTION_SERVICE_URL: "http://fraud-detection-service:8085/check"
  INVENTORY_SERVICE_URL: "http://inventory-service:8082"
  INVENTORY_RELEASE_URL: "http://inventory-service:8082/release_stock"
  INVENTORY_RESERVE_URL: "http://inventory-service:8082/reserve_stock"
  NOTIFICATION_SERVICE_URL: "http://notification-service:8083"
  PRICING_SERVICE_URL: "http://pricing-service:8084/calculate_price"
  PROMOTION_SERVICE_URL: "http://promotion-service:8087/get_promo_price"
  SHIPPING_SERVICE_URL: "http://shipping-service:8086/get_quote"

  # DB_SOURCE: 数据库连接字符串。
  # root:root@tcp(mysql.database:3306)/test
  # mysql.database:3306 是数据库服务的地址。
  # "mysql" 是 Service 的名称。
  # "database" 是命名空间。
  DB_SOURCE: "root:root@tcp(mysql.infra:3306)/test"

  # REDIS_ADDR: Redis 的地址。
  # "redis" 是 Service 的名称。
  # "database" 是命名空间。
  REDIS_ADDR: "redis.infra:6379"
  ZK_SERVERS: "zookeeper-headless.infra:2181"
  # ✨ [核心改动] 修改 REDIS_ADDRS，指向新的集群
  # 使用 StatefulSet 创建的 Pod 会有稳定的 DNS 名称，格式为: <pod-name>.<service-name>.<namespace>.svc.cluster.local
  # 这里我们列出所有 Redis 节点的地址，使用完整的FQDN格式
  REDIS_ADDRS: "redis-cluster-0.redis-cluster-headless.infra.svc.cluster.local:6379,redis-cluster-1.redis-cluster-headless.infra.svc.cluster.local:6379,redis-cluster-2.redis-cluster-headless.infra.svc.cluster.local:6379"

  # 这里我们为了演示, 硬编码一个开发环境的ID。你需要在Nacos控制台预先创建好这个命名空间。
  NACOS_NAMESPACE: "d586122c-170f-40e9-9d17-5cede728cd7e" # 假设这是开发环境的Namespace ID
  NACOS_GROUP: "nexus-group"   # 为项目所有服务定义一个统一的分组
